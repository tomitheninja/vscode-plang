---
"$schema": https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: Plang
patterns:
  - include: "#comments"
  - include: "#program"
repository:
  comments:
    patterns:
      - name: comment.line.plang
        match: "\\*\\*.*$"
  program:
    name: meta.program.plang
    begin: "(?i)\\bPROGRAM\\b"
    end: "(?i)\\bPROGRAM_V[EÉ]GE\\b"
    patterns:
      - include: "#comments"
      - include: "#expressions"
  expressions:
    patterns:
      - include: "#keywords"
      - include: "#constants"
      - include: "#square-brackets"
      - include: "#types"
  types:
    name: support.type
    match: "(?i)\\b(EG[EÉ]SZ|VAL[OÓ]S|KARAKTER|SZ[OÖ]VEG|LOGIKAI)"
  keywords:
    patterns:
      - name: keyword.operator.logical.plang
        match: (?i)(NEM|[EÉ]S|VAGY)

      - name: keyword.operator.assignment.plang
        match: ":="

      - name: keyword.operator.comparison.plang
        match: "(?<![<>\\/=])((\\/)?=)"

      - name: keyword.operator.relational.plang
        match: "(?<![<>\\/=])([<>](=)?)"

      - name: keyword.operator.arithmetic.plang
        match: "(?i)([\\+\\-\\/\\*\\^]|MOD|DIV|NAGY|KIS|KEREK|DIV|EG[EÉ]SZ|@|SIN|COS|ARCSIN|ARCTAN|LOG|EXP|KEREK|EG[EÉ]SZ|BET[UŰ]|SZ[AÁ]M|MEGNYIT|LEZ[AÁ]R)"

      - include: "#length-operator"
  constants:
    name: "contant.plang"
    patterns:
      - name: constant.character.plang
        match: "'.'"
      - name: constant.numeric.plang
        match: "\\b\\d+(\\.\\d+)?\\b"
      - include: "#strings"

  strings:
    patterns:
      - name: string.quoted.double.plang
        begin: '"'
        end: '"'
        patterns:
          - match: "\\\\(u\\h{4}|.)"
            name: "constant.character.escape.plang"

  square-brackets:
    patterns:
      - name: meta.group.braces.square
        begin: \[
        beginCaptures:
          "0": { name: meta.brace.square.plang }
        end: \]
        endCaptures:
          "0": { name: meta.brace.square.plang }
        patterns:
          - include: "#expressions"

  length-operator:
    patterns:
      - begin: \|
        beginCaptures:
          "0": { name: keyword.operator.arithmetic.plang }
        end: \|
        endCaptures:
          "0": { name: keyword.operator.arithmetic.plang }
        patterns:
          - include: "#expressions"

scopeName: "source.plang"
